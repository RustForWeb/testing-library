[package]
name = "testing-library-dom"
description = "Rust port of DOM Testing Library."
homepage = "https://testing-library.rustforweb.org"

authors.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
version.workspace = true

[dependencies]
aria-query = "0.0.5"
dom-accessibility-api = "0.0.3"
log.workspace = true
ordered_hash_map = "0.4.0"
paste = "1.0.15"
pretty-format = { path = "../pretty-format", version = "0.0.1" }
regex.workspace = true
thiserror.workspace = true
wasm-bindgen.workspace = true
web-sys = { workspace = true, features = [
    "AddEventListenerOptions",
    "AnimationEvent",
    "AnimationEventInit",
    "Attr",
    "ClipboardEvent",
    "ClipboardEventInit",
    "Comment",
    "CompositionEvent",
    "CompositionEventInit",
    "Document",
    "DocumentFragment",
    "DragEvent",
    "DragEventInit",
    "Element",
    "Event",
    "EventInit",
    "EventTarget",
    "FocusEvent",
    "FocusEventInit",
    "HtmlCollection",
    "HtmlElement",
    "HtmlInputElement",
    "HtmlLabelElement",
    "HtmlOptionElement",
    "HtmlOptionsCollection",
    "HtmlSelectElement",
    "InputEvent",
    "InputEventInit",
    "KeyboardEvent",
    "KeyboardEventInit",
    "MessageEvent",
    "MessageEventInit",
    "MouseEvent",
    "MouseEventInit",
    "NamedNodeMap",
    "NodeList",
    "PageTransitionEvent",
    "PageTransitionEventInit",
    "PointerEvent",
    "PointerEventInit",
    "PopStateEvent",
    "PopStateEventInit",
    "ProgressEvent",
    "ProgressEventInit",
    "Text",
    "TouchEvent",
    "TouchEventInit",
    "TransitionEvent",
    "TransitionEventInit",
    "UiEvent",
    "UiEventInit",
    "WheelEvent",
    "WheelEventInit",
    "Window",
] }

[dev-dependencies]
indoc = "2.0.5"
mockall = "0.13.0"
pretty_assertions = "1.4.1"
send_wrapper = "0.6.0"
testing_logger = "0.1.1"
wasm-bindgen-test.workspace = true

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(wasm_bindgen_unstable_test_coverage)',
] }
